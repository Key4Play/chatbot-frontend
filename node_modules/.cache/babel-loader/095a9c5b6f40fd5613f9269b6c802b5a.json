{"ast":null,"code":"import { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { has, isArray } from \"lodash\";\nimport { toast } from \"react-toastify\";\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\nimport moment from \"moment\";\nconst useAuth = () => {\n  const history = useHistory();\n  const [isAuth, setIsAuth] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState({});\n  api.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${JSON.parse(token)}`;\n      setIsAuth(true);\n    }\n    return config;\n  }, error => {\n    Promise.reject(error);\n  });\n  let isRefreshing = false;\n  let failedRequestsQueue = [];\n  api.interceptors.response.use(response => {\n    return response;\n  }, async error => {\n    var _error$response, _error$response2, _error$response3;\n    const originalRequest = error.config;\n    if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403 && !originalRequest._retry) {\n      if (isRefreshing) {\n        return new Promise((resolve, reject) => {\n          failedRequestsQueue.push({\n            resolve,\n            reject\n          });\n        }).then(token => {\n          originalRequest.headers.Authorization = `Bearer ${token}`;\n          return api(originalRequest);\n        }).catch(err => {\n          return Promise.reject(err);\n        });\n      }\n      originalRequest._retry = true;\n      isRefreshing = true;\n      try {\n        const {\n          data\n        } = await api.post(\"/auth/refresh_token\");\n        if (data) {\n          localStorage.setItem(\"token\", JSON.stringify(data.token));\n          api.defaults.headers.Authorization = `Bearer ${data.token}`;\n          failedRequestsQueue.forEach(request => {\n            request.resolve(data.token);\n          });\n          failedRequestsQueue = [];\n        }\n        return api(originalRequest);\n      } catch (refreshError) {\n        failedRequestsQueue.forEach(request => {\n          request.reject(refreshError);\n        });\n        failedRequestsQueue = [];\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"companyId\");\n        api.defaults.headers.Authorization = undefined;\n        setIsAuth(false);\n        return Promise.reject(refreshError);\n      } finally {\n        isRefreshing = false;\n      }\n    }\n    if ((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401 || (error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 403 && originalRequest._retry) {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"companyId\");\n      api.defaults.headers.Authorization = undefined;\n      setIsAuth(false);\n    }\n    return Promise.reject(error);\n  });\n  const socketManager = useContext(SocketContext);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    (async () => {\n      if (token) {\n        try {\n          const {\n            data\n          } = await api.post(\"/auth/refresh_token\");\n          api.defaults.headers.Authorization = `Bearer ${data.token}`;\n          setIsAuth(true);\n          setUser(data.user);\n        } catch (err) {\n          toastError(err);\n        }\n      }\n      setLoading(false);\n    })();\n  }, []);\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    if (companyId) {\n      const socket = socketManager.getSocket(companyId);\n      socket.on(`company-${companyId}-user`, data => {\n        if (data.action === \"update\" && data.user.id === user.id) {\n          setUser(data.user);\n        }\n      });\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [socketManager, user]);\n  const handleLogin = async userData => {\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await api.post(\"/auth/login\", userData);\n      const {\n        user: {\n          companyId,\n          id,\n          company\n        }\n      } = data;\n      if (has(company, \"settings\") && isArray(company.settings)) {\n        const setting = company.settings.find(s => s.key === \"campaignsEnabled\");\n        if (setting && setting.value === \"true\") {\n          localStorage.setItem(\"cshow\", null); //regra pra exibir campanhas\n        }\n      }\n      moment.locale(\"pt-br\");\n      const dueDate = data.user.company.dueDate;\n      const hoje = moment(moment()).format(\"DD/MM/yyyy\");\n      const vencimento = moment(dueDate).format(\"DD/MM/yyyy\");\n      var diff = moment(dueDate).diff(moment(moment()).format());\n      var before = moment(moment().format()).isBefore(dueDate);\n      var dias = moment.duration(diff).asDays();\n      if (before === true) {\n        localStorage.setItem(\"token\", JSON.stringify(data.token));\n        localStorage.setItem(\"companyId\", companyId);\n        localStorage.setItem(\"userId\", id);\n        localStorage.setItem(\"companyDueDate\", vencimento);\n        api.defaults.headers.Authorization = `Bearer ${data.token}`;\n        setUser(data.user);\n        setIsAuth(true);\n        toast.success(i18n.t(\"auth.toasts.success\"));\n        if (Math.round(dias) < 5) {\n          toast.warn(`Sua assinatura vence em ${Math.round(dias)} ${Math.round(dias) === 1 ? \"dia\" : \"dias\"} `);\n        }\n        history.push(\"/tickets\");\n        setLoading(false);\n      } else {\n        toastError(`Opss! Sua assinatura venceu ${vencimento}.\nEntre em contato com o Suporte para mais informações! `);\n        setLoading(false);\n      }\n\n      //quebra linha\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n  const handleLogout = async () => {\n    setLoading(true);\n    try {\n      await api.delete(\"/auth/logout\");\n      setIsAuth(false);\n      setUser({});\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"companyId\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"cshow\");\n      api.defaults.headers.Authorization = undefined;\n      setLoading(false);\n      history.push(\"/login\");\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n  const getCurrentUserInfo = async () => {\n    try {\n      const {\n        data\n      } = await api.get(\"/auth/me\");\n      return data;\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  return {\n    isAuth,\n    user,\n    loading,\n    handleLogin,\n    handleLogout,\n    getCurrentUserInfo\n  };\n};\nexport default useAuth;","map":{"version":3,"names":["useState","useEffect","useContext","useHistory","has","isArray","toast","i18n","api","toastError","SocketContext","moment","useAuth","history","isAuth","setIsAuth","loading","setLoading","user","setUser","interceptors","request","use","config","token","localStorage","getItem","headers","JSON","parse","error","Promise","reject","isRefreshing","failedRequestsQueue","response","_error$response","_error$response2","_error$response3","originalRequest","status","_retry","resolve","push","then","Authorization","catch","err","data","post","setItem","stringify","defaults","forEach","refreshError","removeItem","undefined","socketManager","companyId","socket","getSocket","on","action","id","disconnect","handleLogin","userData","company","settings","setting","find","s","key","value","locale","dueDate","hoje","format","vencimento","diff","before","isBefore","dias","duration","asDays","success","t","Math","round","warn","handleLogout","delete","getCurrentUserInfo","get"],"sources":["/Users/bill/Downloads/zap 8.0/codatendechat-main/frontend/src/hooks/useAuth.js/index.js"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { has, isArray } from \"lodash\";\n\nimport { toast } from \"react-toastify\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { SocketContext } from \"../../context/Socket/SocketContext\";\nimport moment from \"moment\";\nconst useAuth = () => {\n  const history = useHistory();\n  const [isAuth, setIsAuth] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState({});\n\n  api.interceptors.request.use(\n    (config) => {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        config.headers[\"Authorization\"] = `Bearer ${JSON.parse(token)}`;\n        setIsAuth(true);\n      }\n      return config;\n    },\n    (error) => {\n      Promise.reject(error);\n    }\n  );\n\n  let isRefreshing = false;\n  let failedRequestsQueue = [];\n\n  api.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    async (error) => {\n      const originalRequest = error.config;\n\n      if (error?.response?.status === 403 && !originalRequest._retry) {\n        if (isRefreshing) {\n          return new Promise((resolve, reject) => {\n            failedRequestsQueue.push({ resolve, reject });\n          })\n            .then((token) => {\n              originalRequest.headers.Authorization = `Bearer ${token}`;\n              return api(originalRequest);\n            })\n            .catch((err) => {\n              return Promise.reject(err);\n            });\n        }\n\n        originalRequest._retry = true;\n        isRefreshing = true;\n\n        try {\n          const { data } = await api.post(\"/auth/refresh_token\");\n\n          if (data) {\n            localStorage.setItem(\"token\", JSON.stringify(data.token));\n            api.defaults.headers.Authorization = `Bearer ${data.token}`;\n\n            failedRequestsQueue.forEach((request) => {\n              request.resolve(data.token);\n            });\n            failedRequestsQueue = [];\n          }\n\n          return api(originalRequest);\n        } catch (refreshError) {\n          failedRequestsQueue.forEach((request) => {\n            request.reject(refreshError);\n          });\n          failedRequestsQueue = [];\n\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"companyId\");\n          api.defaults.headers.Authorization = undefined;\n          setIsAuth(false);\n\n          return Promise.reject(refreshError);\n        } finally {\n          isRefreshing = false;\n        }\n      }\n\n      if (\n        error?.response?.status === 401 ||\n        (error?.response?.status === 403 && originalRequest._retry)\n      ) {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"companyId\");\n        api.defaults.headers.Authorization = undefined;\n        setIsAuth(false);\n      }\n\n      return Promise.reject(error);\n    }\n  );\n\n  const socketManager = useContext(SocketContext);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    (async () => {\n      if (token) {\n        try {\n          const { data } = await api.post(\"/auth/refresh_token\");\n          api.defaults.headers.Authorization = `Bearer ${data.token}`;\n          setIsAuth(true);\n          setUser(data.user);\n        } catch (err) {\n          toastError(err);\n        }\n      }\n      setLoading(false);\n    })();\n  }, []);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    if (companyId) {\n      const socket = socketManager.getSocket(companyId);\n\n      socket.on(`company-${companyId}-user`, (data) => {\n        if (data.action === \"update\" && data.user.id === user.id) {\n          setUser(data.user);\n        }\n      });\n\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [socketManager, user]);\n\n  const handleLogin = async (userData) => {\n    setLoading(true);\n\n    try {\n      const { data } = await api.post(\"/auth/login\", userData);\n      const {\n        user: { companyId, id, company },\n      } = data;\n\n      if (has(company, \"settings\") && isArray(company.settings)) {\n        const setting = company.settings.find(\n          (s) => s.key === \"campaignsEnabled\"\n        );\n        if (setting && setting.value === \"true\") {\n          localStorage.setItem(\"cshow\", null); //regra pra exibir campanhas\n        }\n      }\n\n      moment.locale(\"pt-br\");\n      const dueDate = data.user.company.dueDate;\n      const hoje = moment(moment()).format(\"DD/MM/yyyy\");\n      const vencimento = moment(dueDate).format(\"DD/MM/yyyy\");\n\n      var diff = moment(dueDate).diff(moment(moment()).format());\n\n      var before = moment(moment().format()).isBefore(dueDate);\n      var dias = moment.duration(diff).asDays();\n\n      if (before === true) {\n        localStorage.setItem(\"token\", JSON.stringify(data.token));\n        localStorage.setItem(\"companyId\", companyId);\n        localStorage.setItem(\"userId\", id);\n        localStorage.setItem(\"companyDueDate\", vencimento);\n        api.defaults.headers.Authorization = `Bearer ${data.token}`;\n        setUser(data.user);\n        setIsAuth(true);\n        toast.success(i18n.t(\"auth.toasts.success\"));\n        if (Math.round(dias) < 5) {\n          toast.warn(\n            `Sua assinatura vence em ${Math.round(dias)} ${\n              Math.round(dias) === 1 ? \"dia\" : \"dias\"\n            } `\n          );\n        }\n        history.push(\"/tickets\");\n        setLoading(false);\n      } else {\n        toastError(`Opss! Sua assinatura venceu ${vencimento}.\nEntre em contato com o Suporte para mais informações! `);\n        setLoading(false);\n      }\n\n      //quebra linha\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n\n  const handleLogout = async () => {\n    setLoading(true);\n\n    try {\n      await api.delete(\"/auth/logout\");\n      setIsAuth(false);\n      setUser({});\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"companyId\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"cshow\");\n      api.defaults.headers.Authorization = undefined;\n      setLoading(false);\n      history.push(\"/login\");\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n\n  const getCurrentUserInfo = async () => {\n    try {\n      const { data } = await api.get(\"/auth/me\");\n      return data;\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  return {\n    isAuth,\n    user,\n    loading,\n    handleLogin,\n    handleLogout,\n    getCurrentUserInfo,\n  };\n};\n\nexport default useAuth;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,GAAG,EAAEC,OAAO,QAAQ,QAAQ;AAErC,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,aAAa,QAAQ,oCAAoC;AAClE,OAAOC,MAAM,MAAM,QAAQ;AAC3B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,OAAO,GAAGV,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpCQ,GAAG,CAACY,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;IACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAI,UAASC,IAAI,CAACC,KAAK,CAACL,KAAK,CAAE,EAAC;MAC/DT,SAAS,CAAC,IAAI,CAAC;IACjB;IACA,OAAOQ,MAAM;EACf,CAAC,EACAO,KAAK,IAAK;IACTC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EACvB,CACF,CAAC;EAED,IAAIG,YAAY,GAAG,KAAK;EACxB,IAAIC,mBAAmB,GAAG,EAAE;EAE5B1B,GAAG,CAACY,YAAY,CAACe,QAAQ,CAACb,GAAG,CAC1Ba,QAAQ,IAAK;IACZ,OAAOA,QAAQ;EACjB,CAAC,EACD,MAAOL,KAAK,IAAK;IAAA,IAAAM,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;IACf,MAAMC,eAAe,GAAGT,KAAK,CAACP,MAAM;IAEpC,IAAI,CAAAO,KAAK,aAALA,KAAK,wBAAAM,eAAA,GAALN,KAAK,CAAEK,QAAQ,cAAAC,eAAA,uBAAfA,eAAA,CAAiBI,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;MAC9D,IAAIR,YAAY,EAAE;QAChB,OAAO,IAAIF,OAAO,CAAC,CAACW,OAAO,EAAEV,MAAM,KAAK;UACtCE,mBAAmB,CAACS,IAAI,CAAC;YAAED,OAAO;YAAEV;UAAO,CAAC,CAAC;QAC/C,CAAC,CAAC,CACCY,IAAI,CAAEpB,KAAK,IAAK;UACfe,eAAe,CAACZ,OAAO,CAACkB,aAAa,GAAI,UAASrB,KAAM,EAAC;UACzD,OAAOhB,GAAG,CAAC+B,eAAe,CAAC;QAC7B,CAAC,CAAC,CACDO,KAAK,CAAEC,GAAG,IAAK;UACd,OAAOhB,OAAO,CAACC,MAAM,CAACe,GAAG,CAAC;QAC5B,CAAC,CAAC;MACN;MAEAR,eAAe,CAACE,MAAM,GAAG,IAAI;MAC7BR,YAAY,GAAG,IAAI;MAEnB,IAAI;QACF,MAAM;UAAEe;QAAK,CAAC,GAAG,MAAMxC,GAAG,CAACyC,IAAI,CAAC,qBAAqB,CAAC;QAEtD,IAAID,IAAI,EAAE;UACRvB,YAAY,CAACyB,OAAO,CAAC,OAAO,EAAEtB,IAAI,CAACuB,SAAS,CAACH,IAAI,CAACxB,KAAK,CAAC,CAAC;UACzDhB,GAAG,CAAC4C,QAAQ,CAACzB,OAAO,CAACkB,aAAa,GAAI,UAASG,IAAI,CAACxB,KAAM,EAAC;UAE3DU,mBAAmB,CAACmB,OAAO,CAAEhC,OAAO,IAAK;YACvCA,OAAO,CAACqB,OAAO,CAACM,IAAI,CAACxB,KAAK,CAAC;UAC7B,CAAC,CAAC;UACFU,mBAAmB,GAAG,EAAE;QAC1B;QAEA,OAAO1B,GAAG,CAAC+B,eAAe,CAAC;MAC7B,CAAC,CAAC,OAAOe,YAAY,EAAE;QACrBpB,mBAAmB,CAACmB,OAAO,CAAEhC,OAAO,IAAK;UACvCA,OAAO,CAACW,MAAM,CAACsB,YAAY,CAAC;QAC9B,CAAC,CAAC;QACFpB,mBAAmB,GAAG,EAAE;QAExBT,YAAY,CAAC8B,UAAU,CAAC,OAAO,CAAC;QAChC9B,YAAY,CAAC8B,UAAU,CAAC,WAAW,CAAC;QACpC/C,GAAG,CAAC4C,QAAQ,CAACzB,OAAO,CAACkB,aAAa,GAAGW,SAAS;QAC9CzC,SAAS,CAAC,KAAK,CAAC;QAEhB,OAAOgB,OAAO,CAACC,MAAM,CAACsB,YAAY,CAAC;MACrC,CAAC,SAAS;QACRrB,YAAY,GAAG,KAAK;MACtB;IACF;IAEA,IACE,CAAAH,KAAK,aAALA,KAAK,wBAAAO,gBAAA,GAALP,KAAK,CAAEK,QAAQ,cAAAE,gBAAA,uBAAfA,gBAAA,CAAiBG,MAAM,MAAK,GAAG,IAC9B,CAAAV,KAAK,aAALA,KAAK,wBAAAQ,gBAAA,GAALR,KAAK,CAAEK,QAAQ,cAAAG,gBAAA,uBAAfA,gBAAA,CAAiBE,MAAM,MAAK,GAAG,IAAID,eAAe,CAACE,MAAO,EAC3D;MACAhB,YAAY,CAAC8B,UAAU,CAAC,OAAO,CAAC;MAChC9B,YAAY,CAAC8B,UAAU,CAAC,WAAW,CAAC;MACpC/C,GAAG,CAAC4C,QAAQ,CAACzB,OAAO,CAACkB,aAAa,GAAGW,SAAS;MAC9CzC,SAAS,CAAC,KAAK,CAAC;IAClB;IAEA,OAAOgB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B,CACF,CAAC;EAED,MAAM2B,aAAa,GAAGvD,UAAU,CAACQ,aAAa,CAAC;EAE/CT,SAAS,CAAC,MAAM;IACd,MAAMuB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,CAAC,YAAY;MACX,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAM;YAAEwB;UAAK,CAAC,GAAG,MAAMxC,GAAG,CAACyC,IAAI,CAAC,qBAAqB,CAAC;UACtDzC,GAAG,CAAC4C,QAAQ,CAACzB,OAAO,CAACkB,aAAa,GAAI,UAASG,IAAI,CAACxB,KAAM,EAAC;UAC3DT,SAAS,CAAC,IAAI,CAAC;UACfI,OAAO,CAAC6B,IAAI,CAAC9B,IAAI,CAAC;QACpB,CAAC,CAAC,OAAO6B,GAAG,EAAE;UACZtC,UAAU,CAACsC,GAAG,CAAC;QACjB;MACF;MACA9B,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACd,MAAMyD,SAAS,GAAGjC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,IAAIgC,SAAS,EAAE;MACb,MAAMC,MAAM,GAAGF,aAAa,CAACG,SAAS,CAACF,SAAS,CAAC;MAEjDC,MAAM,CAACE,EAAE,CAAE,WAAUH,SAAU,OAAM,EAAGV,IAAI,IAAK;QAC/C,IAAIA,IAAI,CAACc,MAAM,KAAK,QAAQ,IAAId,IAAI,CAAC9B,IAAI,CAAC6C,EAAE,KAAK7C,IAAI,CAAC6C,EAAE,EAAE;UACxD5C,OAAO,CAAC6B,IAAI,CAAC9B,IAAI,CAAC;QACpB;MACF,CAAC,CAAC;MAEF,OAAO,MAAM;QACXyC,MAAM,CAACK,UAAU,CAAC,CAAC;MACrB,CAAC;IACH;EACF,CAAC,EAAE,CAACP,aAAa,EAAEvC,IAAI,CAAC,CAAC;EAEzB,MAAM+C,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtCjD,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAM;QAAE+B;MAAK,CAAC,GAAG,MAAMxC,GAAG,CAACyC,IAAI,CAAC,aAAa,EAAEiB,QAAQ,CAAC;MACxD,MAAM;QACJhD,IAAI,EAAE;UAAEwC,SAAS;UAAEK,EAAE;UAAEI;QAAQ;MACjC,CAAC,GAAGnB,IAAI;MAER,IAAI5C,GAAG,CAAC+D,OAAO,EAAE,UAAU,CAAC,IAAI9D,OAAO,CAAC8D,OAAO,CAACC,QAAQ,CAAC,EAAE;QACzD,MAAMC,OAAO,GAAGF,OAAO,CAACC,QAAQ,CAACE,IAAI,CAClCC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAK,kBACnB,CAAC;QACD,IAAIH,OAAO,IAAIA,OAAO,CAACI,KAAK,KAAK,MAAM,EAAE;UACvChD,YAAY,CAACyB,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;QACvC;MACF;MAEAvC,MAAM,CAAC+D,MAAM,CAAC,OAAO,CAAC;MACtB,MAAMC,OAAO,GAAG3B,IAAI,CAAC9B,IAAI,CAACiD,OAAO,CAACQ,OAAO;MACzC,MAAMC,IAAI,GAAGjE,MAAM,CAACA,MAAM,CAAC,CAAC,CAAC,CAACkE,MAAM,CAAC,YAAY,CAAC;MAClD,MAAMC,UAAU,GAAGnE,MAAM,CAACgE,OAAO,CAAC,CAACE,MAAM,CAAC,YAAY,CAAC;MAEvD,IAAIE,IAAI,GAAGpE,MAAM,CAACgE,OAAO,CAAC,CAACI,IAAI,CAACpE,MAAM,CAACA,MAAM,CAAC,CAAC,CAAC,CAACkE,MAAM,CAAC,CAAC,CAAC;MAE1D,IAAIG,MAAM,GAAGrE,MAAM,CAACA,MAAM,CAAC,CAAC,CAACkE,MAAM,CAAC,CAAC,CAAC,CAACI,QAAQ,CAACN,OAAO,CAAC;MACxD,IAAIO,IAAI,GAAGvE,MAAM,CAACwE,QAAQ,CAACJ,IAAI,CAAC,CAACK,MAAM,CAAC,CAAC;MAEzC,IAAIJ,MAAM,KAAK,IAAI,EAAE;QACnBvD,YAAY,CAACyB,OAAO,CAAC,OAAO,EAAEtB,IAAI,CAACuB,SAAS,CAACH,IAAI,CAACxB,KAAK,CAAC,CAAC;QACzDC,YAAY,CAACyB,OAAO,CAAC,WAAW,EAAEQ,SAAS,CAAC;QAC5CjC,YAAY,CAACyB,OAAO,CAAC,QAAQ,EAAEa,EAAE,CAAC;QAClCtC,YAAY,CAACyB,OAAO,CAAC,gBAAgB,EAAE4B,UAAU,CAAC;QAClDtE,GAAG,CAAC4C,QAAQ,CAACzB,OAAO,CAACkB,aAAa,GAAI,UAASG,IAAI,CAACxB,KAAM,EAAC;QAC3DL,OAAO,CAAC6B,IAAI,CAAC9B,IAAI,CAAC;QAClBH,SAAS,CAAC,IAAI,CAAC;QACfT,KAAK,CAAC+E,OAAO,CAAC9E,IAAI,CAAC+E,CAAC,CAAC,qBAAqB,CAAC,CAAC;QAC5C,IAAIC,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,GAAG,CAAC,EAAE;UACxB5E,KAAK,CAACmF,IAAI,CACP,2BAA0BF,IAAI,CAACC,KAAK,CAACN,IAAI,CAAE,IAC1CK,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,MAClC,GACH,CAAC;QACH;QACArE,OAAO,CAAC8B,IAAI,CAAC,UAAU,CAAC;QACxB1B,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,MAAM;QACLR,UAAU,CAAE,+BAA8BqE,UAAW;AAC7D,uDAAuD,CAAC;QAChD7D,UAAU,CAAC,KAAK,CAAC;MACnB;;MAEA;IACF,CAAC,CAAC,OAAO8B,GAAG,EAAE;MACZtC,UAAU,CAACsC,GAAG,CAAC;MACf9B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMyE,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BzE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMT,GAAG,CAACmF,MAAM,CAAC,cAAc,CAAC;MAChC5E,SAAS,CAAC,KAAK,CAAC;MAChBI,OAAO,CAAC,CAAC,CAAC,CAAC;MACXM,YAAY,CAAC8B,UAAU,CAAC,OAAO,CAAC;MAChC9B,YAAY,CAAC8B,UAAU,CAAC,WAAW,CAAC;MACpC9B,YAAY,CAAC8B,UAAU,CAAC,QAAQ,CAAC;MACjC9B,YAAY,CAAC8B,UAAU,CAAC,OAAO,CAAC;MAChC/C,GAAG,CAAC4C,QAAQ,CAACzB,OAAO,CAACkB,aAAa,GAAGW,SAAS;MAC9CvC,UAAU,CAAC,KAAK,CAAC;MACjBJ,OAAO,CAAC8B,IAAI,CAAC,QAAQ,CAAC;IACxB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZtC,UAAU,CAACsC,GAAG,CAAC;MACf9B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM2E,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAM;QAAE5C;MAAK,CAAC,GAAG,MAAMxC,GAAG,CAACqF,GAAG,CAAC,UAAU,CAAC;MAC1C,OAAO7C,IAAI;IACb,CAAC,CAAC,OAAOD,GAAG,EAAE;MACZtC,UAAU,CAACsC,GAAG,CAAC;IACjB;EACF,CAAC;EAED,OAAO;IACLjC,MAAM;IACNI,IAAI;IACJF,OAAO;IACPiD,WAAW;IACXyB,YAAY;IACZE;EACF,CAAC;AACH,CAAC;AAED,eAAehF,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}